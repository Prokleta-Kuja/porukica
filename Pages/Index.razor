@page "/"

@if(!string.IsNullOrWhiteSpace(Error))
{
    <div class="alert alert-danger my-2" role="alert">@Error</div>
}

<input type=password placeholder="Authorization" @bind=Authorization class="my-2 form-control">

<div class="row my-4">
    <div class="col">
        <button class="w-100 btn @(TextForm ? "btn-success" : "btn-outline-success")" type="button" @onclick="()=>TextForm = true">Text</button>
    </div>
    <div class="col">
        <button class="w-100 btn @(TextForm ? "btn-outline-info" : "btn-info")" type="button" @onclick="()=>TextForm = false">Files</button>
    </div>
</div>

<div class="row">
    <div class="col">
        <textarea @ref=TextInput row="2" placeholder="Text to share" class="form-control font-monospace mb-2" @bind=Text></textarea>
        @if(!TextForm)
        {
            var isUploading = UploadProgress > -1;
            var progressClass = isUploading ? "" : "d-none";
            var uploadClass = isUploading ? "d-none" : "d-block";

            <div class="progress mb-2 @progressClass" style="height: 40px;">
                <div class="progress-bar progress-bar-striped bg-success" role="progressbar" style="width: @UploadProgress.ToString()%;">@UploadProgress %</div>
            </div>
            <button type=button class="btn btn-danger w-100 mb-2 @progressClass" @onclick=CancelUpload>Cancel</button>
            <div class=@uploadClass>
                <InputFile class="mb-2 form-control" OnChange=FileSelected />
            </div>
        }
    </div>
    <div class="col-3">
        <div class="mb-3">
            <input type=text placeholder="Shared secret" @bind=Secret class="form-control">
        </div>
        <div class="mb-3">
            <input type=number min=1 placeholder="N" @bind=Time class="form-control">
        </div>
        <div class="btn-group w-100 mb-3">
            <button type="button" class="btn btn-outline-success" @onclick="()=>Post(Models.TimeType.Minutes)">Minutes</button>
            <button type="button" class="btn btn-outline-warning" @onclick="()=>Post(Models.TimeType.Hours)">Hours</button>
            <button type="button" class="btn btn-outline-danger" @onclick="()=>Post(Models.TimeType.Days)">Days</button>
        </div>
    </div>
</div>

@if(TextForm)
{
    for (int i = Database.Texts.Count - 1; i >= 0 ; i--)
    {
        var text = Database.Texts.ElementAt(i);
        if(text.Value.ValidForSecret(Secret))
        {
            <div class="card bg-light mb-2">
                <div class="bd-clipboard">
                    <button type="button" class="btn btn-clipboard btn-sm btn-outline-primary" 
                        @onclick="()=>CopyTextToClipboard(text.Value.Text)">
                        Copy
                    </button>
                </div>
                <code class="p-3 text-body">
                    <pre>@text.Value.Text</pre>
                </code>
            </div>
        }
    }
}
else
{
    <div class="row">
        @for (int i = Database.Files.Count - 1; i >= 0 ; i--)
        {
            var file = Database.Files.ElementAt(i);
            if(file.Value.ValidForSecret(Secret))
            {
                <div class="col-4">
                    <div class="card h-100 my-2">
                        <div class="card-header">@file.Value.Name (@C.BytesToString(file.Value.Size))</div>
                        <div class="card-body">                        
                            <code class="text-body">
                                <pre>@file.Value.Text</pre>
                                <pre>@file.Value.Hash</pre>
                            </code>
                            <a href=@file.Value.Url target="_blank" class="w-100 btn btn-sm btn-outline-success">Download</a>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
}